name: Build vendor assets

on:
  push:

jobs:

  build_dyn_linux:
    name: Build dynamic asset (linux)
    runs-on: ubuntu-latest
    env:
      CC: gcc-7
      CXX: g++-7
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: actions/checkout@v2
        with:
          repository: webassembly/binaryen
          ref: version_101

      - name: Install old GCC
        run: sudo apt-get install g++-7

      - name: install ninja
        run: sudo apt-get install ninja-build

      - name: mkdir
        run: mkdir -p out

      - name: cmake
        run: cmake -S . -B out -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install

      - name: build
        run: cmake --build out --config Release

      - name: install
        run: cmake --install out --config Release

      - name: strip
        run: find out/install/ -type f -perm -u=x -exec strip -x {} +

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: linux
          path: out/install/lib/*.so

      # Only create vendor copy of headers
      - name: Upload headers
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: headers
          path: out/install/include/*.h

  build_static_linux:
    name: Build static asset (linux)
    runs-on: ubuntu-latest
    env:
      CC: gcc-7
      CXX: g++-7
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: actions/checkout@v2
        with:
          repository: webassembly/binaryen
          ref: version_101

      - name: Install old GCC
        run: sudo apt-get install g++-7

      - name: install ninja
        run: sudo apt-get install ninja-build

      - name: mkdir
        run: mkdir -p out

      - name: cmake
        run: cmake -S . -B out -G Ninja -DBUILD_STATIC_LIB=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install

      - name: build
        run: cmake --build out --config Release

      - name: install
        run: cmake --install out --config Release

      - name: strip
        run: find out/install/ -type f -perm -u=x -exec strip -x {} +

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: linux
          path: out/install/lib/*.a

  build_mac:
    name: Build dynamic asset (mac)
    runs-on: macos-latest
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: webassembly/binaryen
          ref: version_101
          path: binaryen

      - name: install ninja
        run: brew install ninja

      - name: Build dynamic library
        run: |
          cmake -S binaryen -B macos-x86_64 -G Ninja -DBUILD_STATIC_LIB=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=macos-x86_64
          cmake --build macos-x86_64 --config Release
          cmake --install macos-x86_64 --config Release

      - name: Build static library
        run: |
          cmake -S binaryen -B macos-x86_64 -G Ninja -DBUILD_STATIC_LIB=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=macos-x86_64
          cmake --build macos-x86_64 --config Release
          cmake --install macos-x86_64 --config Release

      - name: strip
        run: find macos-x86_64/ -type f -perm -u=x -exec strip -x {} +

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: macosx
          path: |
            macos-x86_64/lib
            macos-x86_64/include
            macos-x86_64/dune-project
            macos-x86_64/dune
            macos-x86_64/libbinaryen.opam

  build_dyn_mingw:
    name: Build dyn asset (mingw)
    runs-on: windows-latest
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: actions/checkout@v2
        with:
          repository: webassembly/binaryen
          ref: version_101

      - name: mkdir
        run: mkdir -p out

      - name: cmake
        run: cmake -S . -B out -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install -DENABLE_WERROR=OFF

      - name: build
        run: cmake --build out --config Release

      - name: install
        run: cmake --install out --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: mingw64
          path: out/install/bin/*.dll

  build_static_mingw:
    name: Build static asset (mingw)
    runs-on: windows-latest
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - uses: actions/checkout@v2
        with:
          repository: webassembly/binaryen
          ref: version_101

      - name: mkdir
        run: mkdir -p out

      - name: cmake
        run: cmake -S . -B out -G "MSYS Makefiles" -DBUILD_STATIC_LIB=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install

      - name: build
        run: cmake --build out --config Release

      - name: install
        run: cmake --install out --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: mingw64
          path: out/install/lib/*.a

  build_js:
    name: Build JS for JSOO compatibility
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: AssemblyScript/binaryen.js
          ref: v101.0.0

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: npm i @babel/core @babel/cli @babel/preset-env

      - run: echo "{\"presets\":[\"@babel/preset-env\"]}" > babel.config.json

      - run: NODE_OPTIONS=--max_old_space_size=4096 npx babel index.js --out-file index.es5.js

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: js
          path: index.es5.js
